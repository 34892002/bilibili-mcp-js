name: Publish to NPM

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (leave empty for current package.json version)'
        required: false
        type: string

jobs:
  publish:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests and build
      run: |
        npm run build
        npm pack --dry-run
        
    - name: Update version if specified
      if: github.event.inputs.version != ''
      run: npm version ${{ github.event.inputs.version }} --no-git-tag-version
      
    - name: Publish to NPM
      run: npm publish --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        
    - name: Create GitHub deployment
      uses: actions/github-script@v7
      with:
        script: |
          const { data: pkg } = await github.rest.repos.getContent({
            owner: context.repo.owner,
            repo: context.repo.repo,
            path: 'package.json'
          });
          
          const packageJson = JSON.parse(Buffer.from(pkg.content, 'base64').toString());
          
          github.rest.repos.createDeployment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: context.sha,
            environment: 'npm',
            description: `Published version ${packageJson.version} to NPM`,
            auto_merge: false,
            required_contexts: []
          });

  notify:
    needs: publish
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Notify success
      if: needs.publish.result == 'success'
      run: |
        echo "✅ Package successfully published to NPM!"
        
    - name: Notify failure
      if: needs.publish.result == 'failure'
      run: |
        echo "❌ Failed to publish package to NPM!"
        exit 1